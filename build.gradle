plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'checkstyle'
}

group = 'com.gfa'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'junit:junit:4.13.1'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'com.mysql:mysql-connector-j:8.0.33'
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'com.jayway.jsonpath:json-path:2.6.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    checkstyle 'com.puppycrawl.tools:checkstyle:10.12.0'
    implementation 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    checkstyle 'com.puppycrawl.tools:checkstyle:10.12.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('checkstyleMain') {
    source 'src/main/java'
    include '**/*.java'
    classpath = files()
}
tasks.named('checkstyleTest') {
    source 'src/test/java'
    include '**/*.java'
    classpath = files()
}

checkstyle {
    toolVersion = "10.12.0"
    configFile = file("${rootDir}/checkstyle.xml")
    showViolations = true
    ignoreFailures = false
    configProperties = [
            'checkstyle.output.format': 'xml',
            'checkstyle.output.file'  : "${project.buildDir}/reports/checkstyle/checkstyle-result.xml"
    ]

}

